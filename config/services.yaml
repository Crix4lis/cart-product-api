# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    Task\App\:
        resource: '../src/*'
#        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    Task\App\Catalogue\UI\Controller\:
        resource: '../src/Catalogue/UI/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    ## handlers
    Task\App\Cart\Application\CreateNewCartHandler:
        class: Task\App\Cart\Application\CreateNewCartHandler
        arguments:
            $carts: '@Task\App\Cart\Infrastructure\Repository\DoctrineCarts'
        tags:
            - { name: tactician.handler, typehints: true }
    Task\App\Cart\Application\AddProductToCartHandler:
        class: Task\App\Cart\Application\AddProductToCartHandler
        arguments:
            $carts: '@Task\App\Cart\Infrastructure\Repository\DoctrineCarts'
        tags:
            - { name: tactician.handler, typehints: true }
    Task\App\Cart\Application\RemoveProductFromCartHandler:
        class: Task\App\Cart\Application\RemoveProductFromCartHandler
        arguments:
            $carts: '@Task\App\Cart\Infrastructure\Repository\DoctrineCarts'
        tags:
            - { name: tactician.handler, typehints: true }
    Task\App\Catalogue\Application\CreateNewProductHandler:
        class: Task\App\Catalogue\Application\CreateNewProductHandler
        arguments:
            $products: '@Task\App\Catalogue\Infrastructure\Repository\DoctrineProducts'
        tags:
            - { name: tactician.handler, typehints: true }
    Task\App\Catalogue\Application\RemoveProductHandler:
        class: Task\App\Catalogue\Application\RemoveProductHandler
        arguments:
            $products: '@Task\App\Catalogue\Infrastructure\Repository\DoctrineProducts'
        tags:
            - { name: tactician.handler, typehints: true }
    Task\App\Catalogue\Application\EditProductHandler:
        class: Task\App\Catalogue\Application\EditProductHandler
        arguments:
            $products: '@Task\App\Catalogue\Infrastructure\Repository\DoctrineProducts'
        tags:
            - { name: tactician.handler, typehints: true }
